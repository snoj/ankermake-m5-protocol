name: Docker Image CI

on:
  push:
    tags:
     - v**
    branches:
      - 'upcoming/*'
      - 'master'
  pull_request:
    branches: [ master ]
     
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: recursive
      
    - name: Log into registry ${{ env.REGISTRY }}
      if: github.event_name == 'push'
      uses: docker/login-action@v2.1.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Docker Setup QEMU
      uses: docker/setup-qemu-action@v2.1.0
      
    - name: Docker Setup Buildx
      uses: docker/setup-buildx-action@v2.5.0
      with:
        version: latest
        install: true
        
    - name: Docker Metadata action
      id: meta
      if: github.event_name == 'push'
      uses: docker/metadata-action@v4.3.0
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        flavor: |
          latest=${{ github.ref == 'refs/heads/master' }}
        tags: |
          type=raw,value=latest,enable=${{ github.ref == 'refs/heads/master' }}
          type=edge,value=edge,enable=${{ startsWith(github.ref, 'refs/heads/upcoming/') }}
          type=raw,value=upcoming,enable=${{ startsWith(github.ref, 'refs/heads/upcoming/') }}
          type=ref,event=tag
        
    - name: Build and push Docker images
      uses: docker/build-push-action@v4.0.0
      with:
        context: .
        file: Dockerfile
        platforms: linux/arm/v7,linux/arm64,linux/amd64
        push: ${{ github.event_name == 'push' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
    
    - name: Create release directory
      run: mkdir release
      
    - name: Zip Release
      if: github.event_name == 'push'
      uses: TheDoctor0/zip-release@0.7.1
      with:
        type: 'zip'
        filename: release/ankerctl-${{ github.ref_name }}.zip
        exclusions: '*.git* /*release/*'
        
    - name: GZip Release
      if: github.event_name == 'push'
      uses: TheDoctor0/zip-release@0.7.1
      with:
        type: 'tar'
        filename: release/ankerctl-${{ github.ref_name }}.tar.gz
        exclusions: '*.git* release'
        
    - name: Release
      if: ${{ github.event_name == 'push' }}
      uses: docker://antonyurchenko/git-release:v5.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        args: release/ankerctl*
